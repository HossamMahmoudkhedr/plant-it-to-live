import { useCallback, useRef, useEffect, useLayoutEffect } from 'react';

var useSSRLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;
function useIsMounted() {
  var isMounted = useRef(false);
  useSSRLayoutEffect(function () {
    isMounted.current = true;
    return function () {
      isMounted.current = false;
    };
  }, []);
  return isMounted;
}
function useSafeCallback(callback) {
  var isMounted = useIsMounted();
  return useCallback(function () {
    return isMounted.current ? callback.apply(void 0, arguments) : void 0;
  }, [callback]);
}

export default useSafeCallback;
export { useIsMounted };
//# sourceMappingURL=use-safe-callback.esm.js.map
